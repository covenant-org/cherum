name: cherum
services:
  server:
    build:
      context: .
    hostname: server.cherum
    restart: always
    healthcheck:
      test: timeout 5s curl --fail http://localhost/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      influxdb:
        condition: service_healthy
    ports:
      - 8083:80
    volumes:
      - cherum-instance:/app/instance
    environment:
      - CONTAINER=docker
      - SECRET_KEY=${SECRET_KEY}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
    labels:
      - autoheal=True
      - homepage.group=Teleop
      - homepage.showStats=true
      - homepage.name=Cherum
      - homepage.icon=/icons/covenant.jpeg
      - homepage.href=https://cherum.covenant.space
      - homepage.decription=Remote drone observation system

  influxdb:
    image: influxdb:2
    restart: always
    hostname: influxdb
    healthcheck:
      test: "curl --request POST \
        http://localhost:8086/api/v2/query?orgID=covenant  \
        --header 'Authorization: Token ${INFLUXDB_TOKEN}' \
        --header 'Accept: application/csv' \
        --header 'Content-type: application/vnd.flux' \
        --data 'from(bucket:\"telemetry\")
              |> range(start: -12h)
              |> filter(fn: (r) => r._measurement == \"position\")
              |> aggregateWindow(every: 1h, fn: mean)'
      "
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - 8086:8086
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=covenant
      - DOCKER_INFLUXDB_INIT_BUCKET=telemetry
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - cherum-data:/var/lib/influxdb2
      - cherum-config:/etc/influxdb2

volumes:
  cherum-instance:
  cherum-config:
  cherum-data:
